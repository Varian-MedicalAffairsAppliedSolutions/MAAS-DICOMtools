<metro:MetroWindow x:Class="ESAPIPatientBrowser.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:local="clr-namespace:ESAPIPatientBrowser.Views"
        Title="Patient List Builder - CombinedApp Integration" 
        Height="1000" Width="1400"
        MinHeight="800" MinWidth="1000"
        WindowStartupLocation="CenterScreen"
        GlowBrush="#808080"
        BorderThickness="1"
        WindowTitleBrush="#808080"
        NonActiveWindowTitleBrush="#606060"
        ShowIconOnTitleBar="True"
        SaveWindowPosition="True"
        TitleCharacterCasing="Normal">
    
    <metro:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:ProgressToVisibilityConverter x:Key="ProgressVisibilityConverter"/>
        
        <!-- Color Brushes matching CombinedApp -->
        <SolidColorBrush x:Key="TealBrush" Color="#009999"/>
        <SolidColorBrush x:Key="OrangeBrush" Color="#ec6602"/>
        <SolidColorBrush x:Key="OrangeHoverBrush" Color="#d85500"/>
        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#404040"/>
        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="#000000"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#808080"/>
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="#bfbfbf"/>
        
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0,8,0,4"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        </Style>
        
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="Background" Value="{StaticResource TealBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource TealBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource OrangeBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#404040"/>
                                <Setter Property="BorderBrush" Value="#606060"/>
                                <Setter Property="Foreground" Value="#808080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="Background" Value="{StaticResource TealBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource TealBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource OrangeBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#404040"/>
                                <Setter Property="BorderBrush" Value="#606060"/>
                                <Setter Property="Foreground" Value="#808080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="HighlightButtonStyle" TargetType="Button">
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Padding" Value="10,6"/>
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource OrangeBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource OrangeHoverBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource OrangeHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#404040"/>
                                <Setter Property="BorderBrush" Value="#606060"/>
                                <Setter Property="Foreground" Value="#808080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

         <!-- Consistent width for header action buttons -->
         <Style x:Key="HeaderActionButtonStyle" TargetType="Button">
             <Setter Property="Width" Value="170"/>
             <Setter Property="Margin" Value="0,0,8,0"/>
             <Setter Property="Padding" Value="10,6"/>
             <Setter Property="Background" Value="{StaticResource TealBrush}"/>
             <Setter Property="Foreground" Value="White"/>
             <Setter Property="BorderBrush" Value="{StaticResource TealBrush}"/>
             <Setter Property="BorderThickness" Value="1"/>
             <Setter Property="FontWeight" Value="Bold"/>
             <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource OrangeBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#404040"/>
                                <Setter Property="BorderBrush" Value="#606060"/>
                                <Setter Property="Foreground" Value="#808080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
         </Style>
         
         <!-- Hyperlink Style matching CombinedApp -->
         <Style TargetType="Hyperlink">
             <Setter Property="Foreground" Value="#009999"/>
             <Setter Property="TextDecorations" Value="Underline"/>
             <Style.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Foreground" Value="#ec6602"/>
                 </Trigger>
             </Style.Triggers>
         </Style>
         
         <!-- GroupBox Style for dark theme -->
         <Style TargetType="GroupBox">
             <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
             <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
             <Setter Property="BorderThickness" Value="1"/>
             <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
             <Setter Property="Padding" Value="8"/>
         </Style>
         
         <!-- TextBlock default style -->
         <Style TargetType="TextBlock">
             <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
         </Style>
         
         <!-- Label style -->
         <Style TargetType="Label">
             <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
         </Style>
         
         <!-- StatusBar style -->
         <Style TargetType="StatusBar">
             <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
             <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
         </Style>
         
        <!-- DataGrid Column Header style - prevent uppercase and set visibility -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#404040"/>
            <Setter Property="Padding" Value="8,6,8,12"/>
            <Setter Property="BorderBrush" Value="#808080"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" TextWrapping="Wrap" Foreground="#FFFFFF" FontWeight="Bold"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </metro:MetroWindow.Resources>
    
    <Grid Margin="8" Background="{StaticResource DarkBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Header with Non-Clinical Use Banner -->
        <StackPanel Grid.Row="0">
            <Border Background="#ec6602" Padding="6" Margin="0,0,0,6">
                <TextBlock Text="**NOT VALIDATED FOR CLINICAL USE**" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center"/>
            </Border>
            <TextBlock Text="Patient List Builder" Style="{StaticResource HeaderTextStyle}" FontSize="18"/>
        </StackPanel>
        
        <!-- Search Panel -->
        <GroupBox Grid.Row="1" Header="Search Criteria" Padding="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Unified Patient Search Interface -->
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Patient Search:" VerticalAlignment="Center" Margin="0,0,8,0"/>
                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Main Search TextBox with Smart Suggestions -->
                    <Grid Grid.Column="0">
                        <TextBox x:Name="MainSearchBox" 
                                 Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                                 ToolTip="Search by Patient ID, First Name, or Last Name - shows smart suggestions as you type"
                                 MinWidth="200">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding SearchCommand}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <Popup IsOpen="{Binding IsSearchSuggestionsVisible}" 
                               PlacementTarget="{Binding ElementName=MainSearchBox}"
                               Placement="Bottom" 
                               Width="{Binding ElementName=MainSearchBox, Path=ActualWidth}"
                               StaysOpen="False">
                            <Border Background="#000000" BorderBrush="#808080" BorderThickness="1" MaxHeight="200">
                                <ListBox ItemsSource="{Binding SearchSuggestions}" 
                                         SelectedItem="{Binding SelectedSuggestion}"
                                         Background="#000000"
                                         Foreground="White"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" Margin="4,2">
                                                <TextBlock Text="{Binding PatientId}" FontWeight="Bold" Width="120" Foreground="#ec6602"/>
                                                <TextBlock Text="-" Margin="8,0,8,0" Foreground="#bfbfbf"/>
                                                <TextBlock Text="{Binding FullName}" Foreground="White"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Padding" Value="4,2"/>
                                            <Setter Property="Background" Value="#000000"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#404040"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Border>
                        </Popup>
                    </Grid>
                </Grid>
                
                <!-- Date Range -->
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Date Range:" VerticalAlignment="Center" Margin="0,12,8,0"/>
                <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0,12,0,0">
                    <TextBlock Text="From:" VerticalAlignment="Center" Margin="0,0,8,0"/>
                    <DatePicker SelectedDate="{Binding FromDate}" Width="180" MinWidth="180" Height="26" Margin="0,0,20,0"/>
                    <TextBlock Text="To:" VerticalAlignment="Center" Margin="0,0,8,0"/>
                    <DatePicker SelectedDate="{Binding ToDate}" Width="180" MinWidth="180" Height="26"/>
                    
                    <!-- Filter: Patients with Plans -->
                    <CheckBox IsChecked="{Binding ShowOnlyPatientsWithPlans}" 
                              VerticalAlignment="Center" 
                              Margin="40,0,0,0"
                              Foreground="White"
                              ToolTip="Only show patients that have at least one plan">
                        <TextBlock Text="Has plans" Foreground="White"/>
                    </CheckBox>
                </StackPanel>
                
                <!-- Search Actions -->
                <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Search" Command="{Binding RefreshCommand}" 
                            Style="{StaticResource PrimaryButtonStyle}" Margin="8,2,4,2" MinWidth="120"
                            ToolTip="Search multiple patients using filters"/>
                    <Button Content="Advanced Search" Command="{Binding AdvancedSearchCommand}" 
                            Style="{StaticResource HighlightButtonStyle}" Margin="8,2,4,2" MinWidth="120"
                            ToolTip="Advanced search by PTV, prescriptions, structures, and more (date range optional)"/>
                    <!-- Export/Import/Open moved to bottom Actions workspace -->
                </StackPanel>
            </Grid>
        </GroupBox>
        
        <!-- Results Panel -->
        <GroupBox Grid.Row="2" Header="Patient List (Cumulative)" Padding="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
				<!-- Selection Controls -->
				<Grid Grid.Row="0" Margin="4">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<StackPanel Orientation="Horizontal">
						<Button Content="Select All" Command="{Binding SelectAllPatientsCommand}" 
								Style="{StaticResource HeaderActionButtonStyle}"
								ToolTip="Select all patients in the list"/>
						<Button Content="Clear Selection" Command="{Binding ClearSelectionCommand}" 
								Style="{StaticResource HeaderActionButtonStyle}"
								ToolTip="Clear checkboxes but keep patients in list"/>
						<Button Content="Clear List" Command="{Binding ClearPatientListCommand}" 
								Style="{StaticResource HeaderActionButtonStyle}"
								ToolTip="Remove all patients from list"/>
						<TextBlock Text="{Binding SelectionSummary}" VerticalAlignment="Center" Margin="16,0,0,0" 
								   FontWeight="Bold" Foreground="#ec6602"/>
					</StackPanel>
					<!-- Plan selection shortcuts for selected patient -->
					<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Content="Select All Plans" Command="{Binding SelectAllPlansForListCommand}"
								Style="{StaticResource HeaderActionButtonStyle}"
								ToolTip="Select all plans for all patients in the list"/>
						<Button Content="Select Approved Plans" Command="{Binding SelectApprovedPlansForListCommand}"
								Style="{StaticResource HeaderActionButtonStyle}"
								ToolTip="Select plans with PlanningApproved or TreatmentApproved status for all patients in the list"/>
						<Button Content="Select Most Recent Plan" Command="{Binding SelectMostRecentPlanForListCommand}"
								Style="{StaticResource HeaderActionButtonStyle}"
								ToolTip="Select the most recent plan for each patient in the list"/>
					</StackPanel>
				</Grid>
                
                <!-- Patient List -->
                <DataGrid Grid.Row="1" ItemsSource="{Binding Patients}" SelectedItem="{Binding SelectedPatient}"
                          AutoGenerateColumns="False" CanUserSortColumns="True" IsReadOnly="False" Margin="0,12,0,0">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Header="Select" Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="60"/>
                        <DataGridTextColumn Header="Patient ID" Binding="{Binding PatientId}" Width="140"/>
                        <DataGridTextColumn Header="Last name" Binding="{Binding LastName}" Width="160"/>
                        <DataGridTextColumn Header="First name" Binding="{Binding FirstName}" Width="160"/>
                        <DataGridTextColumn Header="Date of birth" Binding="{Binding DateOfBirth, StringFormat=MM/dd/yyyy}" Width="130"/>
                        <DataGridTextColumn Header="Creation date" Binding="{Binding CreationDate, StringFormat=MM/dd/yyyy}" Width="130"/>
                        <DataGridTextColumn Header="Plan count" Binding="{Binding PlanSelectionSummary}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
        
        <!-- Plan Details Panel -->
        <GroupBox Grid.Row="3" Header="Plan Details" Padding="4" MaxHeight="250">
            <DataGrid ItemsSource="{Binding SelectedPatient.Plans}" AutoGenerateColumns="False" IsReadOnly="False">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Header="Select" Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="60"/>
                    <DataGridTextColumn Header="Course" Binding="{Binding CourseId}" Width="140"/>
                    <DataGridTextColumn Header="Plan" Binding="{Binding PlanId}" Width="180"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding ApprovalStatus}" Width="120"/>
                    <DataGridTextColumn Header="Total dose (Gy)" Binding="{Binding TotalDose, StringFormat=F1}" Width="120"/>
                    <DataGridTextColumn Header="Fractions" Binding="{Binding NumberOfFractions}" Width="100"/>
                    <DataGridTextColumn Header="Structure set" Binding="{Binding StructureSetId}" Width="160"/>
                    <DataGridTextColumn Header="Creation date" Binding="{Binding CreationDate, StringFormat=MM/dd/yyyy}" Width="130"/>
                    <DataGridTextColumn Header="Created by" Binding="{Binding CreationUser}" Width="140"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        
        <!-- Action Panel -->
        <GroupBox Grid.Row="4" Header="Actions" Padding="8">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
				<!-- File Actions (moved to Search Actions for visibility) -->
				<StackPanel Grid.Column="0" Orientation="Horizontal">
					<TextBlock Text="File Operations:" VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,8,0"/>
				</StackPanel>
                
                <!-- CombinedApp Actions -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <CheckBox Content="Include Optimization Objectives" 
                              IsChecked="{Binding IncludeObjectives}"
                              VerticalAlignment="Center" 
                              Margin="0,0,10,0"
                              ToolTip="Export optimization objectives as JSON files (for IMRT/VMAT plans)"/>
                    <Button Content="Export to JSON" Command="{Binding ExportToJsonCommand}" 
                            Style="{StaticResource ActionButtonStyle}"
                            ToolTip="Export selected patients and plans to JSON file for DICOMTools"/>
                    <Button Content="Import from JSON" Command="{Binding ImportFromJsonCommand}" 
                            Style="{StaticResource ActionButtonStyle}"
                            ToolTip="Import patients and plans from a previously saved JSON file"/>
                    <Button Content="Open DICOMTools Web UI" Command="{Binding OpenCombinedAppIndexCommand}"
                            Style="{StaticResource HighlightButtonStyle}"
                            ToolTip="Launch DICOMTools web interface to export/import DICOM files"/>
                </StackPanel>
            </Grid>
        </GroupBox>
        
         <!-- Status Bar -->
         <StatusBar Grid.Row="5" Margin="0,4,0,0">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" FontWeight="Bold"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Center">
                <ProgressBar Width="300" Height="18" 
                             Minimum="0" Maximum="100"
                             Value="{Binding SearchProgress}"
                             Foreground="#009999"
                             Visibility="{Binding SearchProgress, Converter={StaticResource ProgressVisibilityConverter}}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Button Content="Cancel" Command="{Binding CancelSearchCommand}"
                            Background="#CC0000" Foreground="White"
                            FontWeight="Bold" FontSize="11"
                            Padding="12,4" Margin="0,0,12,0"
                            BorderThickness="0"
                            Visibility="{Binding IsSearching, Converter={StaticResource BoolToVisibilityConverter}}"
                            ToolTip="Stop the current search operation"/>
                    <TextBlock Text="Working..." FontWeight="Bold" Margin="0,0,8,0"
                               Foreground="#009999"
                               Visibility="{Binding IsSearching, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <metro:ProgressRing Width="20" Height="20" 
                                       Foreground="#009999"
                                       IsActive="{Binding IsSearching}"
                                       Visibility="{Binding IsSearching, Converter={StaticResource BoolToVisibilityConverter}}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

         <!-- License Row -->
         <Border Grid.Row="6" Background="#000000" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1,0,0,0" Padding="6" Margin="0,6,0,0">
             <TextBlock HorizontalAlignment="Center" Foreground="{StaticResource TextSecondaryBrush}">
                 <Run Text="Bound by the terms of the "/>
                 <Hyperlink NavigateUri="http://medicalaffairs.varian.com/download/VarianLUSLA.pdf" RequestNavigate="VarianLicense_RequestNavigate">Varian LUSLA</Hyperlink>
             </TextBlock>
         </Border>
    </Grid>
</metro:MetroWindow>
